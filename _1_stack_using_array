#include <iostream>
using namespace std;

class Stack {
private:
    int top;        // Index of the top element
    int size;       // Maximum size of the stack
    int* arr;       // Dynamic array to hold stack elements

public:
    // Constructor
    Stack(int stackSize) {
        size = stackSize;
        arr = new int[size];
        top = -1;   // Stack is initially empty
    }

    // Destructor
    ~Stack() {
        delete[] arr;
    }

    // Push an element onto the stack
    void push(int element) {
        if (top == size - 1) {
            cout << "Stack Overflow! Cannot push " << element << endl;
        } else {
            arr[++top] = element;
            cout << element << " pushed onto the stack." << endl;
        }
    }

    // Pop an element from the stack
    int pop() {
        if (isEmpty()) {
            cout << "Stack Underflow! Cannot pop from an empty stack." << endl;
            return -1; // Return -1 to indicate failure
        } else {
            int poppedElement = arr[top--];
            return poppedElement;
        }
    }

    // Check if the stack is empty
    bool isEmpty() {
        return top == -1;
    }

    // Display stack contents
    void display() {
        if (isEmpty()) {
            cout << "Stack is empty." << endl;
        } else {
            cout << "Stack contents: ";
            for (int i = 0; i <= top; i++) {
                cout << arr[i] << " ";
            }
            cout << endl;
        }
    }
};

int main() {
    int stackSize;
    cout << "Enter the size of the stack: ";
    cin >> stackSize;

    Stack stack(stackSize);

    // Test the stack
    stack.push(10);
    stack.push(20);
    stack.push(30);

    stack.display();

    cout << "Popped element: " << stack.pop() << endl;

    stack.display();

    cout << "Is the stack empty? " << (stack.isEmpty() ? "Yes" : "No") << endl;

    return 0;
}
